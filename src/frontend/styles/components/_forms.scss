@use '../abstracts/variables' as *;
@use 'sass:color';
@use 'sass:math';

// General form styling
form {
  display: flex;
  flex-direction: column;
  gap: $spacer * 1.5;

  // Consistent form button styling for submit buttons
  button[type="submit"] {
    width: 100%;
    height: 44px;
    min-height: 44px;
    padding: 10px 16px;
    margin-top: $spacer-4;
    font-size: $font-size-base;
    font-weight: $font-weight-semibold;
    line-height: 1;
    text-align: center;
    border-radius: $border-radius;
  }
}

// .form-group class is still used for semantics and specific margins in LoginPage.scss,
// but its flex properties were removed based on user feedback.
// No general styles for .form-group remain in this file.

label {
  color: $dark-theme-text-secondary;
  font-weight: $font-weight-bold;
  font-size: $font-size-label-default;
  margin-bottom: math.div($spacer, 4);
}

input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="url"],
input[type="number"],
input[type="date"],
input[type="time"],
textarea,
select {
  background-color: $dark-theme-card-bg; // Slightly lighter than page for contrast
  color: $text-color-light;
  border: $base-border-width solid $dark-theme-border-color;
  border-radius: var(--base-border-radius, $border-radius-sm); // Use CSS variable with fallback
  padding: var(--input-padding, math.div($spacer, 1.5)) $spacer;
  font-size: $font-size-input-default;
  line-height: 1.3;
  min-height: var(--input-height, 42px); // Use CSS variable with fallback
  width: 100%; // Default to full width within their container
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  &::placeholder {
    color: $dark-theme-text-secondary;
    opacity: 1; // Firefox fix
  }

  &:focus,
  &.is-focused {
    border-color: $brand-primary; // Use new highlight color
    // Use consistent units for all values (both in rem)
    box-shadow: 0 0 0 2px $brand-primary-subtle, 0 0 0 calc(2px + 0.0625rem) $brand-primary;
    outline: none;
  }

  // Disabled state
  &:disabled,
  &[readonly] {
    background-color: color.adjust($dark-theme-card-bg, $lightness: -5%);
    opacity: 0.7;
    cursor: not-allowed;
  }
}

textarea {
  min-height: 120px;
  resize: vertical;
}

// Basic select styling (can be enhanced with custom arrows later)
select {
  // For browsers that support custom appearance
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23{$dark-theme-text-secondary-hex}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right $spacer center;
  background-size: 16px 12px;
  padding-right: $spacer * 3; // Make space for the arrow
}

// Checkbox and Radio (basic styling, can be improved)
input[type="checkbox"],
input[type="radio"] {
  margin-right: math.div($spacer, 2);
  accent-color: $primary-accent;
  vertical-align: middle;
}

.form-check-label {
  color: $text-color-light;
  font-weight: $font-weight-normal;
  font-size: $font-size-base;
  margin-bottom: 0;
}

.form-text {
  font-size: $font-size-sm;
  color: $dark-theme-text-secondary;
  margin-top: math.div($spacer, 4);
}

// Input validation states (basic)
/* Use a more specific selector to avoid !important */
input.is-invalid,
textarea.is-invalid,
select.is-invalid,
.is-invalid {
  border-color: $danger-color;
  &:focus {
    // Consistent shadow pattern for invalid fields, using danger color
    border-color: $danger-color; // Ensure border color remains danger on focus
    box-shadow: 0 0 0 2px rgba($danger-color, 0.25), 0 0 0 calc(2px + 0.0625rem) $danger-color;
  }
}

.invalid-feedback {
  display: none; // Hidden by default
  width: 100%;
  margin-top: .25rem;
  font-size: $font-size-sm;
  color: $danger-color;
}

.is-invalid ~ .invalid-feedback,
.is-invalid ~ .form-text + .invalid-feedback { // Handle case with form-text
  display: block;
}

// Styles for valid form states
.is-valid {
  border-color: $success-color;
  padding-right: calc(1.5em + 0.75rem);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
  
  &:focus {
    border-color: color.adjust($success-color, $lightness: -10%);
    box-shadow: 0 0 0 0.25rem rgba($success-color, 0.25);
  }
}

.valid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: $success-color;
}

.is-valid ~ .valid-feedback,
.is-valid ~ .form-text + .valid-feedback {
  display: block;
}

// Field-specific error styles for form validation
.input-error {
  border-color: $danger-color;

  &:focus {
    border-color: $danger-color;
    box-shadow: 0 0 0 2px rgba($danger-color, 0.25), 0 0 0 calc(2px + 0.0625rem) $danger-color;
  }
}

.field-error {
  display: block;
  width: 100%;
  margin-top: 0.25rem;
  font-size: $font-size-sm;
  color: $danger-color;
}

// Required field indicator
.required-indicator {
  color: $danger-color;
  margin-left: 0.25rem;
  font-weight: $font-weight-bold;

  &::before {
    content: '*';
  }
}

.form-check-input {
  &:checked {
    background-color: $primary-accent;
    border-color: $primary-accent;
    accent-color: $primary-accent;
  }
}
