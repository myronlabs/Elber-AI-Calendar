{"version":3,"file":"fastAlertFormatter.js","sourceRoot":"","sources":["../../../src/backend/services/fastAlertFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["import { Alert, AlertStatus, AlertPriority } from '../types/domain';\n\nexport class FastAlertFormatter {\n  /**\n   * Format alerts for display in markdown\n   * @param alerts Array of alerts to format\n   * @param searchTermForDisplay Search term to include in the message\n   * @returns Formatted markdown string\n   */\n  static formatAlertsForDisplay(\n    alerts: Alert[],\n    _searchTermForDisplay?: string\n  ): string {\n    if (!alerts || alerts.length === 0) {\n      return \"No alerts found.\";\n    }\n    \n    const statusOrder = {\n      [AlertStatus.PENDING]: 1,\n      [AlertStatus.TRIGGERED]: 2,\n      [AlertStatus.SNOOZED]: 3,\n      [AlertStatus.DISMISSED]: 4\n    };\n    \n    const priorityLabels = {\n      [AlertPriority.HIGH]: '🔴 High',\n      [AlertPriority.MEDIUM]: '🟠 Medium',\n      [AlertPriority.LOW]: '🟢 Low'\n    };\n    \n    // Group alerts by status for better organization\n    const alertsByStatus: Record<string, Alert[]> = {};\n    \n    alerts.forEach(alert => {\n      if (!alertsByStatus[alert.status]) {\n        alertsByStatus[alert.status] = [];\n      }\n      alertsByStatus[alert.status].push(alert);\n    });\n    \n    // Sort statuses by importance\n    const sortedStatuses = Object.keys(alertsByStatus).sort(\n      (a, b) => statusOrder[a as AlertStatus] - statusOrder[b as AlertStatus]\n    );\n    \n    // Format the alerts\n    let formattedOutput = \"\";\n    \n    sortedStatuses.forEach(status => {\n      // Add a section header for each status\n      formattedOutput += `### ${this.formatStatusLabel(status as AlertStatus)} Alerts\\n\\n`;\n      \n      // Sort alerts by due date, then priority\n      const sortedAlerts = alertsByStatus[status].sort((a, b) => {\n        // First by due date (ascending)\n        const dateA = new Date(a.due_date).getTime();\n        const dateB = new Date(b.due_date).getTime();\n        if (dateA !== dateB) return dateA - dateB;\n        \n        // Then by priority (high to low)\n        return b.priority - a.priority;\n      });\n      \n      // Format each alert in this status group\n      sortedAlerts.forEach((alert, index) => {\n        const dueDate = new Date(alert.due_date);\n        const formattedDate = this.formatDateForDisplay(dueDate);\n        \n        const description = alert.description \n          ? `\\n   ${alert.description.replace(/\\n/g, '\\n   ')}` \n          : '';\n          \n        const priorityLabel = priorityLabels[alert.priority] || 'Normal';\n        \n        formattedOutput += `**${index + 1}. ${alert.title}** (${priorityLabel})\\n`;\n        formattedOutput += `   Due: **${formattedDate}**${description}\\n`;\n        \n        // Add associated entities if any\n        if (alert.contact_id) {\n          formattedOutput += `   Related to contact with ID: ${alert.contact_id}\\n`;\n        }\n        if (alert.event_id) {\n          formattedOutput += `   Related to event with ID: ${alert.event_id}\\n`;\n        }\n        \n        // Add tags if any\n        if (alert.tags && alert.tags.length > 0) {\n          formattedOutput += `   Tags: ${alert.tags.map(tag => `\\`${tag}\\``).join(', ')}\\n`;\n        }\n        \n        // Add specific status details\n        if (status === AlertStatus.SNOOZED && alert.snoozed_until) {\n          const snoozeDate = new Date(alert.snoozed_until);\n          formattedOutput += `   Snoozed until: **${this.formatDateForDisplay(snoozeDate)}**\\n`;\n        }\n        \n        // Add space between alerts\n        formattedOutput += '\\n';\n      });\n    });\n    \n    return formattedOutput.trim();\n  }\n  \n  /**\n   * Format an alert status as a user-friendly label\n   * @param status The alert status to format\n   * @returns Formatted status label\n   */\n  static formatStatusLabel(status: AlertStatus): string {\n    switch (status) {\n      case AlertStatus.PENDING:\n        return 'Pending';\n      case AlertStatus.TRIGGERED:\n        return 'Triggered';\n      case AlertStatus.SNOOZED:\n        return 'Snoozed';\n      case AlertStatus.DISMISSED:\n        return 'Dismissed';\n      default:\n        return 'Unknown';\n    }\n  }\n  \n  /**\n   * Format a date for display with a relative time indicator\n   * @param date The date to format\n   * @returns Formatted date string\n   */\n  static formatDateForDisplay(date: Date): string {\n    const now = new Date();\n    const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const tomorrowStart = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    const weekStart = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekStart.getDate() + 6);\n    \n    const isToday = date >= todayStart && date < tomorrowStart;\n    const isTomorrow = date >= tomorrowStart && date < new Date(tomorrowStart.getTime() + 86400000);\n    const isThisWeek = date >= weekStart && date <= weekEnd;\n    \n    // Format the date for display\n    const timeOptions: Intl.DateTimeFormatOptions = { \n      hour: 'numeric', \n      minute: 'numeric', \n      hour12: true \n    };\n    \n    const dateOptions: Intl.DateTimeFormatOptions = { \n      weekday: 'long', \n      month: 'long', \n      day: 'numeric',\n      year: date.getFullYear() !== now.getFullYear() ? 'numeric' : undefined\n    };\n    \n    const timeStr = date.toLocaleTimeString('en-US', timeOptions);\n    const dateStr = date.toLocaleDateString('en-US', dateOptions);\n    \n    // Add a relative time description\n    let relativePrefix = '';\n    if (isToday) {\n      relativePrefix = 'Today';\n    } else if (isTomorrow) {\n      relativePrefix = 'Tomorrow';\n    } else if (isThisWeek) {\n      relativePrefix = dateStr.split(',')[0]; // Just the day of week\n    } else {\n      return `${dateStr} at ${timeStr}`;\n    }\n    \n    return `${relativePrefix} at ${timeStr}`;\n  }\n  \n  /**\n   * Format a single alert's details as markdown\n   * @param alert The alert to format\n   * @returns Markdown formatted alert details\n   */\n  static formatSingleAlert(alert: Alert): string {\n    if (!alert) {\n      return \"Alert not found.\";\n    }\n    \n    const dueDate = new Date(alert.due_date);\n    const formattedDate = this.formatDateForDisplay(dueDate);\n    \n    const priorityLabels = {\n      [AlertPriority.HIGH]: '🔴 High',\n      [AlertPriority.MEDIUM]: '🟠 Medium',\n      [AlertPriority.LOW]: '🟢 Low'\n    };\n    \n    const statusLabels = {\n      [AlertStatus.PENDING]: '⏳ Pending',\n      [AlertStatus.TRIGGERED]: '🔔 Triggered',\n      [AlertStatus.SNOOZED]: '💤 Snoozed',\n      [AlertStatus.DISMISSED]: '✓ Dismissed'\n    };\n    \n    let output = `## Alert: ${alert.title}\\n\\n`;\n    output += `**Status:** ${statusLabels[alert.status] || alert.status}\\n`;\n    output += `**Priority:** ${priorityLabels[alert.priority] || alert.priority}\\n`;\n    output += `**Due Date:** ${formattedDate}\\n`;\n    \n    if (alert.description) {\n      output += `\\n**Description:**\\n${alert.description}\\n`;\n    }\n    \n    if (alert.status === AlertStatus.SNOOZED && alert.snoozed_until) {\n      const snoozeDate = new Date(alert.snoozed_until);\n      output += `\\n**Snoozed Until:** ${this.formatDateForDisplay(snoozeDate)}\\n`;\n    }\n    \n    if (alert.tags && alert.tags.length > 0) {\n      output += `\\n**Tags:** ${alert.tags.map(tag => `\\`${tag}\\``).join(', ')}\\n`;\n    }\n    \n    if (alert.recurring) {\n      output += `\\n**Recurring:** Yes`;\n      if (alert.recurrence_rule) {\n        output += ` (${this.formatRecurrenceRule(alert.recurrence_rule)})`;\n      }\n      output += '\\n';\n    }\n    \n    return output;\n  }\n  \n  /**\n   * Format a recurrence rule in a user-friendly way\n   * @param rule The recurrence rule in iCal format\n   * @returns User-friendly description\n   */\n  static formatRecurrenceRule(rule: string): string {\n    // This is a simplistic implementation and could be enhanced\n    if (!rule) return 'Custom pattern';\n    \n    if (rule.includes('FREQ=DAILY')) {\n      return 'Daily';\n    } else if (rule.includes('FREQ=WEEKLY')) {\n      return 'Weekly';\n    } else if (rule.includes('FREQ=MONTHLY')) {\n      return 'Monthly';\n    } else if (rule.includes('FREQ=YEARLY')) {\n      return 'Yearly';\n    }\n    \n    return 'Custom pattern';\n  }\n} "]}