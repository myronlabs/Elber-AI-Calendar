{"version":3,"file":"oauthErrors.js","sourceRoot":"","sources":["../../../../src/backend/services/errors/oauthErrors.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * OAuth Error Classes\n * \n * Provides a hierarchy of strongly-typed error classes for OAuth-related operations.\n * This improves error handling by allowing specific error types to be caught and handled,\n * while maintaining a clear inheritance hierarchy.\n */\n\n/**\n * Base class for all OAuth-related errors\n */\nexport class OAuthError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'OAuthError';\n    \n    // Ensures proper prototype chain for instanceof checks\n    Object.setPrototypeOf(this, OAuthError.prototype);\n  }\n}\n\n/**\n * Error thrown when OAuth configuration is invalid or missing\n */\nexport class OAuthConfigError extends OAuthError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'OAuthConfigError';\n    \n    Object.setPrototypeOf(this, OAuthConfigError.prototype);\n  }\n}\n\n/**\n * Error thrown when a token cannot be found for a user\n */\nexport class TokenNotFoundError extends OAuthError {\n  public userId: string;\n  public provider: string;\n  \n  constructor(userId: string, provider: string) {\n    super(`No OAuth token found for user ${userId} with provider ${provider}`);\n    this.name = 'TokenNotFoundError';\n    this.userId = userId;\n    this.provider = provider;\n    \n    Object.setPrototypeOf(this, TokenNotFoundError.prototype);\n  }\n}\n\n/**\n * Error thrown when a token is expired and cannot be refreshed\n */\nexport class TokenExpiredError extends OAuthError {\n  public userId: string;\n  public provider: string;\n  \n  constructor(userId: string, provider: string) {\n    super(`OAuth token expired for user ${userId} with provider ${provider} and could not be refreshed`);\n    this.name = 'TokenExpiredError';\n    this.userId = userId;\n    this.provider = provider;\n    \n    Object.setPrototypeOf(this, TokenExpiredError.prototype);\n  }\n}\n\n/**\n * Error thrown when a token refresh operation fails\n */\nexport class TokenRefreshError extends OAuthError {\n  public userId: string;\n  public provider: string;\n  public cause?: Error;\n  \n  constructor(userId: string, provider: string, cause?: Error) {\n    const baseMessage = `Failed to refresh OAuth token for user ${userId} with provider ${provider}`;\n    const fullMessage = cause ? `${baseMessage}: ${cause.message}` : baseMessage;\n    \n    super(fullMessage);\n    this.name = 'TokenRefreshError';\n    this.userId = userId;\n    this.provider = provider;\n    this.cause = cause;\n    \n    Object.setPrototypeOf(this, TokenRefreshError.prototype);\n  }\n}\n\n/**\n * Error thrown when a token does not have the required scopes for an operation\n */\nexport class InsufficientScopeError extends OAuthError {\n  public userId: string;\n  public provider: string;\n  public requiredScopes: string[];\n  public currentScopes: string[];\n  \n  constructor(\n    userId: string, \n    provider: string, \n    requiredScopes: string[], \n    currentScopes: string[]\n  ) {\n    super(\n      `OAuth token for user ${userId} with provider ${provider} has insufficient scopes. ` +\n      `Required: ${requiredScopes.join(', ')}. ` +\n      `Current: ${currentScopes.join(', ')}`\n    );\n    \n    this.name = 'InsufficientScopeError';\n    this.userId = userId;\n    this.provider = provider;\n    this.requiredScopes = requiredScopes;\n    this.currentScopes = currentScopes;\n    \n    Object.setPrototypeOf(this, InsufficientScopeError.prototype);\n  }\n}\n\n/**\n * Error thrown when there's a database error during OAuth operations\n */\nexport class OAuthDatabaseError extends OAuthError {\n  public operation: string;\n  public cause?: Error;\n  \n  constructor(operation: string, cause?: Error) {\n    const baseMessage = `Database error during OAuth ${operation} operation`;\n    const fullMessage = cause ? `${baseMessage}: ${cause.message}` : baseMessage;\n    \n    super(fullMessage);\n    this.name = 'OAuthDatabaseError';\n    this.operation = operation;\n    this.cause = cause;\n    \n    Object.setPrototypeOf(this, OAuthDatabaseError.prototype);\n  }\n}"]}