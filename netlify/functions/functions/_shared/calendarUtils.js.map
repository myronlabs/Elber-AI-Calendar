{"version":3,"file":"calendarUtils.js","sourceRoot":"","sources":["../../../../src/backend/functions/_shared/calendarUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { jwtDecode } from 'jwt-decode';\nimport { addDays, addMonths, addYears, differenceInMilliseconds, addMilliseconds, parseISO } from 'date-fns';\nimport { HandlerEvent, DecodedAppJwt, BaseCalendarEvent } from './calendarTypes'; // Import shared types\nimport { RecurringCalendarEvent, RecurrencePatternType, extractRecurrenceInfo } from '../../types/recurrence'; // Assuming this is the correct path\n\n// CORS headers for all responses\nexport const corsHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS'\n};\n\n/**\n * Helper function to validate UUID format\n */\nexport const isValidUUID = (uuid: string): boolean => {\n  if (!uuid) return false;\n  const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\n  return uuidRegex.test(uuid);\n};\n\n/**\n * Helper to get user ID from JWT\n */\nexport const getUserIdFromEvent = (event: HandlerEvent): string | null => {\n  const authHeader = event.headers?.authorization;\n  if (authHeader && authHeader.startsWith('Bearer ')) {\n    const token = authHeader.substring(7); // Remove \"Bearer \" prefix\n    try {\n      const decodedToken = jwtDecode<DecodedAppJwt>(token);\n      return decodedToken.sub || null;\n    } catch (error: unknown) {\n      console.error('[calendarUtils.ts] Error decoding JWT:', error instanceof Error ? error.message : String(error));\n      return null;\n    }\n  }\n  return null;\n};\n\n/**\n * Creates a Supabase client with the user's JWT for operations that need to respect RLS\n */\nexport const createClientWithAuth = (jwt: string): SupabaseClient => {\n  const supabaseUrl = process.env.SUPABASE_URL;\n  const supabaseAnonKey = process.env.SUPABASE_ANON_KEY;\n  \n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error('[calendarUtils.ts] Missing Supabase URL or anon key');\n    throw new Error('Server configuration error: Missing Supabase URL or anonymous key.');\n  }\n  \n  return createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      persistSession: false,\n      autoRefreshToken: false,\n      detectSessionInUrl: false,\n    },\n    global: {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    }\n  });\n};\n\n/**\n * Generate occurrences of a recurring event between start and end dates\n * Returns a list of event instances\n */\nexport function generateRecurringEventOccurrences(\n  baseEvent: RecurringCalendarEvent,\n  viewStartDate: Date,\n  viewEndDate: Date\n): BaseCalendarEvent[] { // Return type changed to BaseCalendarEvent for broader use\n  if (!baseEvent.is_recurring || !baseEvent.recurrence_pattern) {\n    const baseEventStart = parseISO(baseEvent.start_time);\n    const baseEventEnd = parseISO(baseEvent.end_time);\n    if (baseEventStart < viewEndDate && baseEventEnd > viewStartDate) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { event_id, user_id, created_at, updated_at, ...restOfBaseEvent } = baseEvent;\n      return [restOfBaseEvent as BaseCalendarEvent]; \n    }\n    return [];\n  }\n\n  const recurrenceInfo = extractRecurrenceInfo(baseEvent);\n  if (!recurrenceInfo) {\n    const baseEventStart = parseISO(baseEvent.start_time);\n    const baseEventEnd = parseISO(baseEvent.end_time);\n    if (baseEventStart < viewEndDate && baseEventEnd > viewStartDate) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { event_id, user_id, created_at, updated_at, ...restOfBaseEvent } = baseEvent;\n      return [restOfBaseEvent as BaseCalendarEvent];\n    }\n    return [];\n  }\n\n  const occurrences: BaseCalendarEvent[] = [];\n  const firstEventStartDate = parseISO(baseEvent.start_time);\n  const firstEventEndDate = parseISO(baseEvent.end_time);\n  \n  const eventDurationMs = differenceInMilliseconds(firstEventEndDate, firstEventStartDate);\n\n  const REASONABLE_MAX_OCCURRENCES_CAP = 730; \n  let definedCount = Infinity;\n  if (recurrenceInfo.end?.type === 'count' && typeof recurrenceInfo.end.count === 'number' && recurrenceInfo.end.count > 0) {\n    definedCount = recurrenceInfo.end.count;\n  }\n\n  const maxOccurrences = Math.min(definedCount, REASONABLE_MAX_OCCURRENCES_CAP);\n  console.log(`[CALENDAR DEBUG] generateRecurringEventOccurrences: event_id=${baseEvent.event_id}, series_id=${baseEvent.series_id || 'N/A'}, firstEventStart=${firstEventStartDate.toISOString()}, viewStart=${viewStartDate instanceof Date && !isNaN(viewStartDate.valueOf()) ? viewStartDate.toISOString() : 'Invalid Date'}, viewEnd=${viewEndDate instanceof Date && !isNaN(viewEndDate.valueOf()) ? viewEndDate.toISOString() : 'Invalid Date'}, effectiveMaxOccurrences=${maxOccurrences}`);\n\n  const seriesEndDateLimit = recurrenceInfo.end?.type === 'until' && recurrenceInfo.end.until\n                          ? parseISO(recurrenceInfo.end.until) \n                          : addYears(firstEventStartDate, 5);\n\n  const iterationLimitDate = viewEndDate < seriesEndDateLimit ? viewEndDate : seriesEndDateLimit;\n  \n  const interval = typeof recurrenceInfo.interval === 'number' && recurrenceInfo.interval > 0 \n                  ? recurrenceInfo.interval \n                  : 1;\n\n  let currentInstanceStartDate = firstEventStartDate;\n  let occurrenceCount = 0;\n\n  while (currentInstanceStartDate <= iterationLimitDate && occurrenceCount < maxOccurrences) {\n    const currentInstanceEndDate = addMilliseconds(currentInstanceStartDate, eventDurationMs);\n\n    if (currentInstanceStartDate < viewEndDate && currentInstanceEndDate > viewStartDate) {\n      // Extract only the needed fields and exclude database-specific fields\n      const relevantBaseEventData = {\n        title: baseEvent.title,\n        description: baseEvent.description,\n        location: baseEvent.location,\n        start_time: currentInstanceStartDate.toISOString(),\n        end_time: addMilliseconds(currentInstanceStartDate, eventDurationMs).toISOString(),\n        is_all_day: baseEvent.is_all_day,\n        google_event_id: baseEvent.google_event_id,\n        zoom_meeting_id: baseEvent.zoom_meeting_id,\n        parent_event_id: baseEvent.parent_event_id,\n        is_exception: baseEvent.is_exception,\n        exception_date: baseEvent.exception_date,\n        series_id: baseEvent.series_id || baseEvent.event_id,\n        is_recurring: true\n      };\n\n      const eventCopy: BaseCalendarEvent = relevantBaseEventData;\n      occurrences.push(eventCopy);\n    }\n    \n    occurrenceCount++;\n    if (occurrenceCount >= maxOccurrences) {\n      break;\n    }\n\n    let nextPotentialStartDate: Date;\n    switch (recurrenceInfo.pattern) {\n      case RecurrencePatternType.DAILY:\n        nextPotentialStartDate = addDays(currentInstanceStartDate, interval);\n        break;\n      case RecurrencePatternType.WEEKLY:\n        nextPotentialStartDate = addDays(currentInstanceStartDate, 7 * interval);\n        break;\n      case RecurrencePatternType.MONTHLY:\n        nextPotentialStartDate = addMonths(currentInstanceStartDate, interval);\n        break;\n      case RecurrencePatternType.YEARLY:\n        nextPotentialStartDate = addYears(currentInstanceStartDate, interval);\n        break;\n      default:\n        nextPotentialStartDate = addDays(currentInstanceStartDate, interval > 0 ? interval : 1);\n    }\n    currentInstanceStartDate = nextPotentialStartDate;\n  }\n\n  return occurrences;\n} "]}