{"version":3,"file":"openai-helpers.js","sourceRoot":"","sources":["../../../../src/backend/functions/_shared/openai-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Helper functions for OpenAI interactions\n */\n\n/**\n * Get system prompt from environment variable or use default\n */\nexport function getSystemPromptFromEnvironmentOrDefault(envVarName: string, defaultPrompt: string): string {\n  return process.env[envVarName] || defaultPrompt;\n}\n\n/**\n * Enrich a prompt with additional context\n */\nexport function enrichPrompt(prompt: string, context: Record<string, string>): string {\n  let enrichedPrompt = prompt;\n  \n  // Add context variables to the prompt\n  Object.entries(context).forEach(([_key, value]) => {\n    enrichedPrompt += `\\n\\n${value}`;\n  });\n  \n  return enrichedPrompt;\n}\n\n/**\n * Call OpenAI with messages and system prompt\n */\nexport async function callOpenAI(\n  messages: Array<Record<string, unknown>>,\n  systemPrompt: string, \n  apiKey: string,\n  model: string = 'gpt-4.1-mini'\n): Promise<string> {\n  try {\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model,\n        messages: [\n          {\n            role: 'system',\n            content: systemPrompt\n          },\n          ...messages\n        ],\n        temperature: 0.3\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.status} ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data.choices[0].message.content;\n  } catch (error) {\n    console.error('Error calling OpenAI:', error);\n    throw error;\n  }\n}\n\n/**\n * Make a request to OpenAI\n */\nexport async function makeOpenAIRequest(\n  messages: Array<Record<string, unknown>>,\n  systemPrompt: string,\n  apiKey: string,\n  model: string = 'gpt-4.1-mini'\n): Promise<string> {\n  return callOpenAI(messages, systemPrompt, apiKey, model);\n}\n\n/**\n * Extract intention from OpenAI's response\n */\nexport function extractIntentionFromResponse(userMessage: string, _response: string): {\n  action: string;\n  data?: unknown;\n  identifiers?: {\n    alertId?: string;\n    contactId?: string;\n    eventId?: string;\n  };\n} {\n  // Simple heuristic-based extraction for demo purposes\n  // In a real implementation, you might want to use a more structured approach\n  \n  const action = determineAction(userMessage.toLowerCase());\n  \n  // Extract identifiers\n  const identifiers: Record<string, string> = {};\n  \n  // Look for IDs in the message\n  const alertIdMatch = userMessage.match(/alert\\s+(?:id|ID|Id)?\\s*[:#]?\\s*([a-f0-9-]{36})/i);\n  if (alertIdMatch) {\n    identifiers.alertId = alertIdMatch[1];\n  }\n  \n  const contactIdMatch = userMessage.match(/contact\\s+(?:id|ID|Id)?\\s*[:#]?\\s*([a-f0-9-]{36})/i);\n  if (contactIdMatch) {\n    identifiers.contactId = contactIdMatch[1];\n  }\n  \n  // Extract data based on action\n  const data: Record<string, unknown> = {};\n  \n  if (action === 'create_alert' || action === 'update_alert') {\n    // Extract title\n    const titleMatch = userMessage.match(/(?:title|named|called)[:\\s]+[\"']?([^\"'\\n]+)[\"']?/i);\n    if (titleMatch) {\n      data.title = titleMatch[1].trim();\n    }\n    \n    // Extract description\n    const descMatch = userMessage.match(/(?:description|details)[:\\s]+[\"']?([^\"'\\n]+)[\"']?/i);\n    if (descMatch) {\n      data.description = descMatch[1].trim();\n    }\n    \n    // Extract date\n    const dateMatch = userMessage.match(/(?:due|on|at|for)[:\\s]+[\"']?([^\"'\\n]+)[\"']?/i);\n    if (dateMatch) {\n      data.dueDate = dateMatch[1].trim();\n    }\n    \n    // Extract priority\n    if (userMessage.includes('high priority') || userMessage.includes('urgent')) {\n      data.priority = 'high';\n    } else if (userMessage.includes('medium priority') || userMessage.includes('normal priority')) {\n      data.priority = 'medium';\n    } else if (userMessage.includes('low priority')) {\n      data.priority = 'low';\n    }\n    \n    // Extract type\n    if (userMessage.includes('birthday')) {\n      data.type = 'birthday';\n    } else if (userMessage.includes('meeting')) {\n      data.type = 'meeting';\n    } else if (userMessage.includes('task')) {\n      data.type = 'task';\n    } else if (userMessage.includes('follow')) {\n      data.type = 'follow_up';\n    }\n  }\n  \n  if (action === 'snooze_alert') {\n    // Extract snooze time\n    const snoozeMatch = userMessage.match(/(?:until|to)[:\\s]+[\"']?([^\"'\\n]+)[\"']?/i);\n    if (snoozeMatch) {\n      data.snoozeUntil = snoozeMatch[1].trim();\n    }\n  }\n  \n  if (action === 'search_alerts' || action === 'list_alerts') {\n    // Extract search parameters\n    if (userMessage.includes('today')) {\n      const today = new Date();\n      data.fromDate = today.toISOString();\n      \n      const tomorrow = new Date();\n      tomorrow.setDate(today.getDate() + 1);\n      data.toDate = tomorrow.toISOString();\n    } else if (userMessage.includes('this week')) {\n      data.fromDate = new Date().toISOString();\n      \n      const nextWeek = new Date();\n      nextWeek.setDate(nextWeek.getDate() + 7);\n      data.toDate = nextWeek.toISOString();\n    }\n    \n    // Extract status\n    if (userMessage.includes('pending')) {\n      data.status = 'pending';\n    } else if (userMessage.includes('dismissed')) {\n      data.status = 'dismissed';\n    } else if (userMessage.includes('snoozed')) {\n      data.status = 'snoozed';\n    }\n    \n    // Extract priority\n    if (userMessage.includes('high priority')) {\n      data.priority = 'high';\n    } else if (userMessage.includes('medium priority')) {\n      data.priority = 'medium';\n    } else if (userMessage.includes('low priority')) {\n      data.priority = 'low';\n    }\n  }\n  \n  return { action, data, identifiers };\n}\n\n/**\n * Determine action based on user message\n */\nfunction determineAction(message: string): string {\n  // Create\n  if (\n    message.includes('create alert') || \n    message.includes('add alert') || \n    message.includes('make alert') || \n    message.includes('new alert') ||\n    message.includes('set alert') ||\n    message.includes('schedule alert')\n  ) {\n    return 'create_alert';\n  }\n  \n  // Update\n  if (\n    message.includes('update alert') || \n    message.includes('edit alert') || \n    message.includes('modify alert') || \n    message.includes('change alert')\n  ) {\n    return 'update_alert';\n  }\n  \n  // Delete\n  if (\n    message.includes('delete alert') || \n    message.includes('remove alert') || \n    message.includes('cancel alert')\n  ) {\n    return 'delete_alert';\n  }\n  \n  // Get\n  if (\n    message.includes('get alert') || \n    message.includes('show alert') || \n    message.includes('find alert') ||\n    message.includes('view alert') ||\n    message.includes('alert details')\n  ) {\n    return 'get_alert';\n  }\n  \n  // Dismiss\n  if (\n    message.includes('dismiss alert') || \n    message.includes('mark alert as done') || \n    message.includes('complete alert') ||\n    message.includes('mark as dismissed')\n  ) {\n    return 'dismiss_alert';\n  }\n  \n  // Snooze\n  if (\n    message.includes('snooze alert') || \n    message.includes('postpone alert') || \n    message.includes('delay alert') ||\n    message.includes('remind me later')\n  ) {\n    return 'snooze_alert';\n  }\n  \n  // List/Search\n  if (\n    message.includes('list alerts') || \n    message.includes('show alerts') || \n    message.includes('view alerts') ||\n    message.includes('get alerts') ||\n    message.includes('find alerts') ||\n    message.includes('search alerts') ||\n    message.includes('lookup alerts')\n  ) {\n    return message.includes('search') ? 'search_alerts' : 'list_alerts';\n  }\n  \n  // Default\n  return 'unknown';\n} "]}