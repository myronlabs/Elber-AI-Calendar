{"version":3,"file":"intelligentCalendarHandler.js","sourceRoot":"","sources":["../../../../src/backend/functions/_shared/intelligentCalendarHandler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Intelligent Calendar Handler - Implements smart calendar management following OpenAI best practices\n * Handles complete workflows in single operations, understands user intent naturally\n * \n * Returns structured objects (not JSON strings) for OpenAI to format into natural language\n */\n\nimport { parseISO, isValid } from 'date-fns';\n\n// Define calendar event interface\ninterface CalendarEvent {\n  event_id: string;\n  user_id: string;\n  title: string;\n  start_time: string;\n  end_time: string;\n  description?: string;\n  location?: string;\n  is_all_day: boolean;\n  is_recurring: boolean;\n  recurrence_pattern?: string;\n  recurrence_interval?: number;\n  recurrence_days_of_week?: number[];\n  recurrence_day_of_month?: number;\n  recurrence_end_date?: string;\n  recurrence_count?: number;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface IntelligentCalendarArgs {\n  user_request: string;\n  intended_action: 'search' | 'create' | 'update' | 'delete';\n  search_criteria: {\n    search_term: string | null;\n    date_range: {\n      start_date: string | null;\n      end_date: string | null;\n    } | null;\n    event_id: string | null;\n    location: string | null;\n  } | null;\n  event_data: {\n    title: string | null;\n    start_time: string | null;\n    end_time: string | null;\n    description: string | null;\n    location: string | null;\n    is_all_day: boolean | null;\n    \n    // Recurring event properties\n    is_recurring: boolean | null;\n    recurrence_pattern: 'daily' | 'weekly' | 'monthly' | 'yearly' | null;\n    recurrence_interval: number | null;\n    recurrence_days_of_week: number[] | null;\n    recurrence_day_of_month: number | null;\n    recurrence_end_date: string | null;\n    recurrence_count: number | null;\n  } | null;\n  operation_scope: 'single' | 'future' | 'all' | null;\n  confirmation_provided: boolean;\n}\n\nexport interface CalendarHandlerContext {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  supabaseAdmin: any;\n  internalApiBaseUrl: string;\n  internalHeaders: Record<string, string>;\n  config: {\n    maxEventResults: number;\n    upcomingEventsDays: number;\n  };\n  currentUserEmail?: string | null;\n  logPrefix: string;\n}\n\n// Define structured response types for OpenAI to process\nexport interface CalendarOperationResult {\n  success: boolean;\n  operation: string;\n  user_request: string;\n  message: string;\n  error?: string;\n  events?: CalendarEvent[];\n  total_found?: number;\n  event?: CalendarEvent | {\n    event_id: string;\n    title: string;\n    start_time: string;\n    location?: string;\n  };\n  updated_events?: number;\n  triggerRefresh?: boolean;\n  event_id?: string;\n  operation_scope?: string;\n  events_found?: number;\n  results?: Array<{\n    event_id: string;\n    title: string;\n    updated: boolean;\n    changes?: string[];\n    event_data?: CalendarEvent;\n    error?: string;\n  }>;\n  matches?: Array<{\n    event_id: string;\n    title: string;\n    start_time: string;\n    location?: string;\n  }>;\n  total_events?: number;\n}\n\n/**\n * Validates calendar operation arguments for completeness and correctness\n */\nfunction validateCalendarOperation(args: IntelligentCalendarArgs): { isValid: boolean; error?: string; normalizedArgs?: IntelligentCalendarArgs } {\n  // Validate intended_action\n  const validActions = ['search', 'create', 'update', 'delete'];\n  if (!validActions.includes(args.intended_action)) {\n    return { isValid: false, error: `Invalid action: ${args.intended_action}. Must be one of: ${validActions.join(', ')}` };\n  }\n\n  // Create a copy of args for potential normalization\n  let normalizedArgs = { ...args };\n\n  // Validate action-specific requirements\n  switch (args.intended_action) {\n    case 'search':\n      if (!args.search_criteria || (!args.search_criteria.search_term && !args.search_criteria.date_range && !args.search_criteria.event_id)) {\n        return { isValid: false, error: 'Search operations require search criteria (search_term, date_range, or event_id)' };\n      }\n      break;\n\n    case 'create':\n      if (!args.event_data) {\n        return { isValid: false, error: 'Create operations require event_data' };\n      }\n      if (!args.event_data.title || !args.event_data.start_time || !args.event_data.end_time) {\n        return { isValid: false, error: 'Create operations require title, start_time, and end_time' };\n      }\n      break;\n\n    case 'update': {\n      // First check if we have valid search criteria\n      const hasValidSearchCriteria = args.search_criteria && (args.search_criteria.search_term || args.search_criteria.event_id);\n      \n      if (!hasValidSearchCriteria) {\n        // Try to extract event ID from user_request as a fallback\n        const eventIdMatch = args.user_request.match(/\\b([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})\\b/i);\n        \n        if (eventIdMatch) {\n          // Normalize the args by adding the extracted event ID to search_criteria\n          normalizedArgs = {\n            ...args,\n            search_criteria: {\n              ...args.search_criteria,\n              event_id: eventIdMatch[1],\n              search_term: null,\n              date_range: null,\n              location: null\n            }\n          };\n          console.log(`[CalendarHandler] Extracted event ID from user_request: ${eventIdMatch[1]}`);\n        } else {\n        return { isValid: false, error: 'Update operations require search criteria to identify events' };\n        }\n      }\n      \n      if (!args.event_data) {\n        return { isValid: false, error: 'Update operations require event_data with fields to change' };\n      }\n      break;\n    }\n\n    case 'delete': {\n      // Similar logic for delete operations\n      const hasValidDeleteCriteria = args.search_criteria && (args.search_criteria.search_term || args.search_criteria.event_id);\n      \n      if (!hasValidDeleteCriteria) {\n        // Try to extract event title from user_request as a fallback\n        // Look for patterns like 'Delete calendar event \"Event Title\"' or 'Delete calendar event Event Title'\n        const eventTitleMatch = args.user_request.match(/Delete calendar event [\"']([^\"']+)[\"']/i) || \n                               args.user_request.match(/Delete calendar event (.+)$/i);\n        \n        if (eventTitleMatch) {\n          const eventTitle = eventTitleMatch[1].trim();\n          // Normalize the args by adding the extracted event title to search_criteria\n          normalizedArgs = {\n            ...args,\n            search_criteria: {\n              ...args.search_criteria,\n              search_term: eventTitle,\n              event_id: null,\n              date_range: null,\n              location: null\n            }\n          };\n          console.log(`[CalendarHandler] Extracted event title from user_request for delete: \"${eventTitle}\"`);\n        } else {\n          return { isValid: false, error: 'Delete operations require search criteria to identify events' };\n        }\n      }\n      break;\n    }\n  }\n\n  return { isValid: true, normalizedArgs };\n}\n\n/**\n * Intelligent Calendar Handler - One function that handles all calendar operations intelligently\n * Following OpenAI best practices: handles complete workflows, understands intent, no sequential calls\n * \n * Returns structured objects for OpenAI to format into natural language responses\n * \n * CRUD OPERATIONS SUPPORTED:\n * - CREATE: Add new events with full field support including recurring events\n * - READ: Search and retrieve events by any criteria\n * - UPDATE: Modify existing events, handles recurring events with proper scope\n * - DELETE: Remove events with appropriate confirmation and scope handling\n */\nexport async function handleIntelligentCalendarOperation(\n  args: IntelligentCalendarArgs,\n  userId: string,\n  context: CalendarHandlerContext\n): Promise<CalendarOperationResult> {\n  const { logPrefix } = context;\n  console.log(`${logPrefix} Intelligent calendar operation: ${args.intended_action} - \"${args.user_request}\"`);\n\n  // Validate calendar operation (with potential normalization)\n  const validation = validateCalendarOperation(args);\n  if (!validation.isValid) {\n    console.error(`${logPrefix} Calendar validation failed:`, validation.error);\n    return {\n      success: false,\n      operation: args.intended_action,\n      user_request: args.user_request,\n      error: \"ValidationError\",\n      message: validation.error || \"Validation failed\"\n    };\n  }\n\n  // Use normalized args if validation provided them\n  const normalizedArgs = validation.normalizedArgs || args;\n\n  try {\n    switch (normalizedArgs.intended_action) {\n      case 'search':\n        return await handleIntelligentCalendarSearch(normalizedArgs, userId, context);\n      case 'create':\n        return await handleIntelligentCalendarCreate(normalizedArgs, userId, context);\n      case 'update':\n        return await handleIntelligentCalendarUpdate(normalizedArgs, userId, context);\n      case 'delete':\n        return await handleIntelligentCalendarDelete(normalizedArgs, userId, context);\n      default:\n        return {\n          success: false,\n          operation: normalizedArgs.intended_action,\n          user_request: normalizedArgs.user_request,\n          error: \"InvalidAction\",\n          message: `Unknown action: ${normalizedArgs.intended_action}`\n        };\n    }\n  } catch (error) {\n    console.error(`${logPrefix} Intelligent calendar operation error:`, error);\n    return {\n      success: false,\n      operation: normalizedArgs.intended_action,\n      user_request: normalizedArgs.user_request,\n      error: \"UnexpectedError\",\n      message: `Operation failed: ${error instanceof Error ? error.message : 'Unknown error'}`\n    };\n  }\n}\n\n/**\n * Intelligent calendar search using optimized event search\n */\nasync function handleIntelligentCalendarSearch(\n  args: IntelligentCalendarArgs,\n  userId: string,\n  context: CalendarHandlerContext\n): Promise<CalendarOperationResult> {\n  const { logPrefix } = context;\n  \n  if (!args.search_criteria) {\n    return {\n      success: false,\n      operation: \"search\",\n      user_request: args.user_request,\n      error: \"InvalidSearch\",\n      message: \"No search criteria provided in the request.\"\n    };\n  }\n\n  console.log(`${logPrefix} Searching calendar events for user ${userId}`);\n\n  // Use the existing calendar API endpoint for search\n  const searchResponse = await fetch(`${context.internalApiBaseUrl}/.netlify/functions/calendar`, {\n    method: 'GET',\n    headers: context.internalHeaders,\n    // Build query string from search criteria\n  });\n\n  if (!searchResponse.ok) {\n    console.error(`${logPrefix} Calendar search API error:`, searchResponse.status);\n    return {\n      success: false,\n      operation: \"search\",\n      user_request: args.user_request,\n      error: \"SearchError\",\n      message: \"Failed to search calendar events.\"\n    };\n  }\n\n  const events = await searchResponse.json();\n\n  return {\n    success: true,\n    operation: \"search\",\n    user_request: args.user_request,\n    events: events,\n    total_found: events.length,\n    message: events.length > 0 \n      ? `Found ${events.length} event${events.length > 1 ? 's' : ''}`\n      : `No events found matching your criteria`\n  };\n}\n\n/**\n * Intelligent event creation with smart time parsing\n */\nasync function handleIntelligentCalendarCreate(\n  args: IntelligentCalendarArgs,\n  userId: string,\n  context: CalendarHandlerContext\n): Promise<CalendarOperationResult> {\n  const { logPrefix } = context;\n\n  if (!args.event_data?.title || !args.event_data?.start_time || !args.event_data?.end_time) {\n    return {\n      success: false,\n      operation: \"create\",\n      user_request: args.user_request,\n      error: \"InvalidData\",\n      message: \"Title, start time, and end time are required to create an event.\"\n    };\n  }\n\n  console.log(`${logPrefix} Creating calendar event: ${args.event_data.title}`);\n\n  // Parse and validate times\n  let startTime: Date;\n  let endTime: Date;\n  \n  try {\n    startTime = parseISO(args.event_data.start_time);\n    endTime = parseISO(args.event_data.end_time);\n    \n    if (!isValid(startTime) || !isValid(endTime)) {\n      throw new Error('Invalid date format');\n    }\n    \n    if (startTime >= endTime) {\n      return {\n        success: false,\n        operation: \"create\",\n        user_request: args.user_request,\n        error: \"InvalidData\",\n        message: \"Start time must be before end time.\"\n      };\n    }\n  } catch {\n    return {\n      success: false,\n      operation: \"create\",\n      user_request: args.user_request,\n      error: \"InvalidData\",\n      message: \"Invalid date format. Please use ISO format (YYYY-MM-DDTHH:mm:ss).\"\n    };\n  }\n\n  // Build event data for creation\n  const createData: Record<string, unknown> = {\n    user_id: userId,\n    title: args.event_data.title,\n    start_time: startTime.toISOString(),\n    end_time: endTime.toISOString(),\n    description: args.event_data.description || null,\n    location: args.event_data.location || null,\n    is_all_day: args.event_data.is_all_day || false,\n    is_recurring: args.event_data.is_recurring || false,\n  };\n\n  // Add recurring event properties if applicable\n  if (args.event_data.is_recurring) {\n    createData.recurrence_pattern = args.event_data.recurrence_pattern;\n    createData.recurrence_interval = args.event_data.recurrence_interval || 1;\n    createData.recurrence_days_of_week = args.event_data.recurrence_days_of_week;\n    createData.recurrence_day_of_month = args.event_data.recurrence_day_of_month;\n    createData.recurrence_end_date = args.event_data.recurrence_end_date;\n    createData.recurrence_count = args.event_data.recurrence_count;\n  }\n\n     const { data: newEvent, error } = await context.supabaseAdmin\n     .from('calendar_events')\n     .insert(createData)\n     .select()\n     .single() as { data: CalendarEvent | null; error: unknown };\n\n  if (error) {\n    console.error(`${logPrefix} Create error:`, error);\n    return {\n      success: false,\n      operation: \"create\",\n      user_request: args.user_request,\n      error: \"CreateError\",\n      message: `Failed to create event: ${error instanceof Error ? error.message : 'Unknown error'}`\n    };\n  }\n\n  if (!newEvent) {\n    return {\n      success: false,\n      operation: \"create\",\n      user_request: args.user_request,\n      error: \"CreateError\",\n      message: \"Failed to create event: No data returned\"\n    };\n  }\n\n  return {\n    success: true,\n    operation: \"create\",\n    user_request: args.user_request,\n    event: newEvent,\n    message: `Successfully created event: ${newEvent.title}`,\n    triggerRefresh: true\n  };\n}\n\n/**\n * Intelligent update - handles recurring events with proper scope\n */\nasync function handleIntelligentCalendarUpdate(\n  args: IntelligentCalendarArgs,\n  userId: string,\n  context: CalendarHandlerContext\n): Promise<CalendarOperationResult> {\n  const { logPrefix } = context;\n\n  if (!args.search_criteria) {\n    return {\n      success: false,\n      operation: \"update\",\n      user_request: args.user_request,\n      error: \"InvalidRequest\",\n      message: \"Search criteria is required for update operations.\"\n    };\n  }\n\n  console.log(`${logPrefix} Finding events to update for user ${userId}`);\n\n  // Find events to update\n  let query = context.supabaseAdmin\n    .from('calendar_events')\n    .select('*')\n    .eq('user_id', userId);\n\n  if (args.search_criteria.event_id) {\n    query = query.eq('event_id', args.search_criteria.event_id);\n  } else if (args.search_criteria.search_term) {\n    query = query.ilike('title', `%${args.search_criteria.search_term}%`);\n  }\n\n  const { data: events, error } = await query as { data: CalendarEvent[] | null; error: unknown };\n\n  if (error) {\n    console.error(`${logPrefix} Error finding events to update:`, error);\n    return {\n      success: false,\n      operation: \"update\",\n      user_request: args.user_request,\n      error: \"SearchError\",\n      message: \"Failed to find events to update.\"\n    };\n  }\n\n  if (!events || events.length === 0) {\n    return {\n      success: false,\n      operation: \"update\",\n      user_request: args.user_request,\n      error: \"NotFound\",\n      message: \"No events found matching the search criteria.\"\n    };\n  }\n\n  // Prepare update data\n  const updateData: Record<string, unknown> = {};\n  let hasChanges = false;\n\n  if (args.event_data) {\n    for (const [field, newValue] of Object.entries(args.event_data)) {\n      if (newValue !== null && newValue !== undefined) {\n        updateData[field] = newValue;\n        hasChanges = true;\n      }\n    }\n  }\n\n  if (!hasChanges) {\n    return {\n      success: true,\n      operation: \"update\",\n      user_request: args.user_request,\n      message: `No changes specified for the ${events.length} matching event${events.length > 1 ? 's' : ''}.`,\n      events_found: events.length\n    };\n  }\n\n  // Update events\n  const updateResults = [];\n  for (const event of events as CalendarEvent[]) {\n    const { data: updatedEvent, error: updateError } = await context.supabaseAdmin\n      .from('calendar_events')\n      .update(updateData)\n      .eq('event_id', event.event_id)\n      .eq('user_id', userId)\n      .select()\n      .single() as { data: CalendarEvent; error: unknown };\n\n    if (updateError) {\n      console.error(`${logPrefix} Update error for ${event.event_id}:`, updateError);\n      updateResults.push({\n        event_id: event.event_id,\n        title: event.title,\n        updated: false,\n        error: updateError instanceof Error ? updateError.message : 'Unknown error'\n      });\n    } else {\n      updateResults.push({\n        event_id: event.event_id,\n        title: updatedEvent.title,\n        updated: true,\n        changes: Object.keys(updateData),\n        event_data: updatedEvent\n      });\n    }\n  }\n\n  const successCount = updateResults.filter(r => r.updated).length;\n\n  return {\n    success: true,\n    operation: \"update\",\n    user_request: args.user_request,\n    message: successCount > 0 \n      ? `Successfully updated ${successCount} of ${updateResults.length} events.`\n      : `Found ${updateResults.length} events but no updates were applied.`,\n    results: updateResults,\n    total_events: updateResults.length,\n    updated_events: successCount,\n    triggerRefresh: successCount > 0\n  };\n}\n\n/**\n * Intelligent delete with appropriate confirmation workflow\n */\nasync function handleIntelligentCalendarDelete(\n  args: IntelligentCalendarArgs,\n  userId: string,\n  context: CalendarHandlerContext\n): Promise<CalendarOperationResult> {\n  if (!args.search_criteria) {\n    return {\n      success: false,\n      operation: \"delete\",\n      user_request: args.user_request,\n      error: \"InvalidRequest\",\n      message: \"Search criteria is required for delete operations.\"\n    };\n  }\n\n  if (!args.confirmation_provided) {\n    // First phase: find event and request confirmation\n    let query = context.supabaseAdmin\n      .from('calendar_events')\n      .select('*')\n      .eq('user_id', userId);\n\n    if (args.search_criteria.event_id) {\n      query = query.eq('event_id', args.search_criteria.event_id);\n    } else if (args.search_criteria.search_term) {\n      query = query.ilike('title', `%${args.search_criteria.search_term}%`);\n    }\n\n    const { data: events, error } = await query as { data: CalendarEvent[] | null; error: unknown };\n\n    if (error) {\n      return {\n        success: false,\n        operation: \"delete\",\n        user_request: args.user_request,\n        error: \"SearchError\",\n        message: \"Failed to search for events to delete.\"\n      };\n    }\n\n    if (!events || events.length === 0) {\n      return {\n        success: false,\n        operation: \"delete\",\n        user_request: args.user_request,\n        error: \"NotFound\",\n        message: \"No events found matching the search criteria.\"\n      };\n    }\n\n    if (events.length > 1) {\n      return {\n        success: false,\n        operation: \"delete\",\n        user_request: args.user_request,\n        error: \"MultipleMatches\",\n        message: `Found ${events.length} events. Please be more specific about which event to delete.`,\n        matches: events.map(e => ({\n          event_id: e.event_id,\n          title: e.title,\n          start_time: e.start_time,\n          location: e.location\n        }))\n      };\n    }\n\n    const event = events[0];\n    return {\n      success: false,\n      operation: \"delete\",\n      user_request: args.user_request,\n      error: \"ConfirmationRequired\",\n      message: `Found event \"${event.title}\" scheduled for ${new Date(event.start_time).toLocaleString()}. Are you sure you want to delete this event? Please confirm to proceed.`,\n      event: {\n        event_id: event.event_id,\n        title: event.title,\n        start_time: event.start_time,\n        location: event.location\n      }\n    };\n  }\n\n  // Second phase: confirmed deletion\n  let query = context.supabaseAdmin\n    .from('calendar_events')\n    .delete()\n    .eq('user_id', userId);\n\n  if (args.search_criteria.event_id) {\n    query = query.eq('event_id', args.search_criteria.event_id);\n  } else if (args.search_criteria.search_term) {\n    query = query.ilike('title', `%${args.search_criteria.search_term}%`);\n  }\n\n  const { error: deleteError } = await query;\n\n  if (deleteError) {\n    return {\n      success: false,\n      operation: \"delete\",\n      user_request: args.user_request,\n      error: \"DeletionFailed\",\n      message: `Failed to delete event: ${deleteError instanceof Error ? deleteError.message : 'Unknown error'}`\n    };\n  }\n\n  return {\n    success: true,\n    operation: \"delete\",\n    user_request: args.user_request,\n    message: \"Event has been deleted successfully.\",\n    triggerRefresh: true\n  };\n} "]}