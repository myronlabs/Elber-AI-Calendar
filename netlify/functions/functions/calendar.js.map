{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../../src/backend/functions/calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { Handler, HandlerEvent as BaseHandlerEvent, HandlerContext, HandlerResponse } from \"@netlify/functions\";\nimport { jwtDecode, JwtPayload } from 'jwt-decode'; // For decoding JWTs\nimport { createClient, SupabaseClient } from '@supabase/supabase-js'; // Import SupabaseClient\nimport { RecurringCalendarEvent, RecurrencePatternType, extractRecurrenceInfo } from '../types/recurrence';\nimport { addDays, addMonths, addYears, differenceInMilliseconds, addMilliseconds, parseISO } from 'date-fns'; // Added date-fns imports\n\n// Extended HandlerEvent to include pathParameters property\ninterface HandlerEvent extends BaseHandlerEvent {\n  pathParameters?: { \n    id?: string;\n    [key: string]: string | undefined;\n  };\n}\n\n/**\n * Interface for the decoded JWT payload, extending JwtPayload\n */\ninterface DecodedAppJwt extends JwtPayload {\n  sub?: string; // Subject (user ID) is standard in JwtPayload\n  // Add any other custom claims specific to your JWTs if necessary\n  // [key: string]: string | number | boolean | null | undefined; // This is too broad, avoid if possible\n}\n\n/**\n * Helper function to validate UUID format\n */\nconst isValidUUID = (uuid: string): boolean => {\n  if (!uuid) return false;\n  const uuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\n  return uuidRegex.test(uuid);\n};\n\n/**\n * Helper to get user ID from JWT\n */\nconst getUserIdFromEvent = (event: HandlerEvent): string | null => {\n  const authHeader = event.headers?.authorization;\n  if (authHeader && authHeader.startsWith('Bearer ')) {\n    const token = authHeader.substring(7); // Remove \"Bearer \" prefix\n    try {\n      const decodedToken = jwtDecode<DecodedAppJwt>(token);\n      return decodedToken.sub || null;\n    } catch (error: unknown) {\n      console.error('[calendar.ts] Error decoding JWT:', error instanceof Error ? error.message : String(error));\n      return null;\n    }\n  }\n  return null;\n};\n\n/**\n * Creates a Supabase client with the user's JWT for operations that need to respect RLS\n */\nconst createClientWithAuth = (jwt: string): ReturnType<typeof createClient> => {\n  const supabaseUrl = process.env.SUPABASE_URL;\n  const supabaseAnonKey = process.env.SUPABASE_ANON_KEY;\n  \n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error('[calendar.ts] Missing Supabase URL or anon key');\n    // Consistently throw an error here for the caller to handle or for it to bubble up\n    throw new Error('Server configuration error: Missing Supabase URL or anonymous key.');\n  }\n  \n  return createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      persistSession: false,\n      autoRefreshToken: false,\n      detectSessionInUrl: false,\n    },\n    global: {\n      headers: {\n        Authorization: `Bearer ${jwt}`\n      }\n    }\n  });\n};\n\n/**\n * Generate occurrences of a recurring event between start and end dates\n * Returns a list of event instances\n * This is a simplified implementation that can be replaced with a more robust library\n */\nfunction generateRecurringEventOccurrences(\n  baseEvent: RecurringCalendarEvent,\n  viewStartDate: Date,\n  viewEndDate: Date\n): Omit<RecurringCalendarEvent, 'event_id' | 'user_id' | 'created_at' | 'updated_at'>[] {\n  if (!baseEvent.is_recurring || !baseEvent.recurrence_pattern) {\n    const baseEventStart = parseISO(baseEvent.start_time);\n    const baseEventEnd = parseISO(baseEvent.end_time);\n    if (baseEventStart < viewEndDate && baseEventEnd > viewStartDate) {\n      // Return a compatible type, ensure all required fields of the return type are present\n      // This simplified path should still strip event_id etc.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { event_id: _event_id, user_id: _user_id, created_at: _created_at, updated_at: _updated_at, ...restOfBaseEvent } = baseEvent;\n      return [restOfBaseEvent]; \n    }\n    return [];\n  }\n\n  const recurrenceInfo = extractRecurrenceInfo(baseEvent);\n  if (!recurrenceInfo) {\n    const baseEventStart = parseISO(baseEvent.start_time);\n    const baseEventEnd = parseISO(baseEvent.end_time);\n    if (baseEventStart < viewEndDate && baseEventEnd > viewStartDate) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { event_id: _event_id, user_id: _user_id, created_at: _created_at, updated_at: _updated_at, ...restOfBaseEvent } = baseEvent;\n      return [restOfBaseEvent];\n    }\n    return [];\n  }\n\n  const occurrences: Omit<RecurringCalendarEvent, 'event_id' | 'user_id' | 'created_at' | 'updated_at'>[] = [];\n  const firstEventStartDate = parseISO(baseEvent.start_time);\n  const firstEventEndDate = parseISO(baseEvent.end_time);\n  \n  // Use date-fns for duration calculation\n  const eventDurationMs = differenceInMilliseconds(firstEventEndDate, firstEventStartDate);\n\n  // More reasonable default for production, e.g., ~2 years of daily events or 10 years of weekly\n  const REASONABLE_MAX_OCCURRENCES_CAP = 730; \n  let definedCount = Infinity;\n  if (recurrenceInfo.end?.type === 'count' && typeof recurrenceInfo.end.count === 'number' && recurrenceInfo.end.count > 0) {\n    definedCount = recurrenceInfo.end.count;\n  }\n\n  // Use the smaller of the event's defined count (if any and positive) or our safety cap.\n  // If no count is defined by the event, or it's not positive, use the safety cap.\n  const maxOccurrences = Math.min(definedCount, REASONABLE_MAX_OCCURRENCES_CAP);\n  console.log(`[CALENDAR DEBUG] generateRecurringEventOccurrences: event_id=${baseEvent.event_id}, series_id=${baseEvent.series_id || 'N/A'}, firstEventStart=${firstEventStartDate.toISOString()}, viewStart=${viewStartDate instanceof Date && !isNaN(viewStartDate.valueOf()) ? viewStartDate.toISOString() : 'Invalid Date'}, viewEnd=${viewEndDate instanceof Date && !isNaN(viewEndDate.valueOf()) ? viewEndDate.toISOString() : 'Invalid Date'}, effectiveMaxOccurrences=${maxOccurrences}`);\n\n  const seriesEndDateLimit = recurrenceInfo.end?.type === 'until' && recurrenceInfo.end.until\n                          ? parseISO(recurrenceInfo.end.until) \n                          : addYears(firstEventStartDate, 5); // Default to 5 years if 'never' or no end date for safety\n\n  // The loop should check against the overall series end, and also the view window's end\n  const iterationLimitDate = viewEndDate < seriesEndDateLimit ? viewEndDate : seriesEndDateLimit;\n  \n  const interval = typeof recurrenceInfo.interval === 'number' && recurrenceInfo.interval > 0 \n                  ? recurrenceInfo.interval \n                  : 1;\n\n  let currentInstanceStartDate = firstEventStartDate;\n  let occurrenceCount = 0;\n\n  // Create recurring instances\n  while (currentInstanceStartDate <= iterationLimitDate && occurrenceCount < maxOccurrences) {\n    const currentInstanceEndDate = addMilliseconds(currentInstanceStartDate, eventDurationMs);\n\n    // Check if the current instance overlaps with the view window [viewStartDate, viewEndDate)\n    // An event overlaps if: event.start < view.end AND event.end > view.start\n    if (currentInstanceStartDate < viewEndDate && currentInstanceEndDate > viewStartDate) {\n      // Create event copy by explicitly picking the fields we want to keep\n      const relevantBaseEventData = {\n        title: baseEvent.title,\n        description: baseEvent.description,\n        location: baseEvent.location,\n        is_all_day: baseEvent.is_all_day,\n        is_recurring: baseEvent.is_recurring,\n        series_id: baseEvent.series_id,\n        exception_date: baseEvent.exception_date\n      };\n\n      const eventCopy: Omit<RecurringCalendarEvent, 'event_id' | 'user_id' | 'created_at' | 'updated_at'> = {\n        ...relevantBaseEventData, // Spread relevant parts of baseEvent first\n        start_time: currentInstanceStartDate.toISOString(),\n        end_time: currentInstanceEndDate.toISOString(),\n        series_id: baseEvent.series_id || baseEvent.event_id, // Keep series_id, ensure it's set from original if it's the first in series\n        is_recurring: true, // This instance is part of a recurring series\n        // parent_event_id: baseEvent.event_id, // This is for exceptions, not regular generated occurrences\n      };\n      occurrences.push(eventCopy);\n    }\n    \n    occurrenceCount++;\n    if (occurrenceCount >= maxOccurrences) {\n      break;\n    }\n\n    // Advance to next occurrence's start date using date-fns\n    let nextPotentialStartDate: Date;\n    switch (recurrenceInfo.pattern) {\n      case RecurrencePatternType.DAILY:\n        nextPotentialStartDate = addDays(currentInstanceStartDate, interval);\n        break;\n      case RecurrencePatternType.WEEKLY:\n        // Simplified: advance by interval weeks.\n        // This does not handle specific daysOfWeek if they are set in recurrenceInfo.daysOfWeek.\n        // A full solution for \"every N weeks on specific daysOfWeek\" is more complex.\n        nextPotentialStartDate = addDays(currentInstanceStartDate, 7 * interval);\n        break;\n      case RecurrencePatternType.MONTHLY:\n        nextPotentialStartDate = addMonths(currentInstanceStartDate, interval);\n        break;\n      case RecurrencePatternType.YEARLY:\n        nextPotentialStartDate = addYears(currentInstanceStartDate, interval);\n        break;\n      default: // Includes RecurrencePatternType.CUSTOM or unhandled\n        // Fallback: advance by interval days to ensure progress\n        nextPotentialStartDate = addDays(currentInstanceStartDate, interval > 0 ? interval : 1);\n    }\n    currentInstanceStartDate = nextPotentialStartDate;\n  }\n\n  return occurrences;\n}\n\ninterface RawEventUpdatePayload extends Partial<Omit<RecurringCalendarEvent, 'event_id' | 'created_at' | 'user_id'>> {\n  update_scope?: string; // 'single', 'future', 'all' - will be removed before DB op\n}\n\ninterface NewCalendarEvent {\n  title: string;\n  start_time: string; // ISO string\n  end_time: string; // ISO string\n  description?: string;\n  location?: string;\n  is_all_day?: boolean;\n  google_event_id?: string | null;\n  zoom_meeting_id?: string | null;\n  is_recurring?: boolean;\n  recurrence_pattern?: RecurrencePatternType | null;\n  recurrence_interval?: number | null;\n  recurrence_day_of_week?: Record<string, boolean> | null; // jsonb in database\n  recurrence_day_of_month?: number | null;\n  recurrence_month?: number | null;\n  recurrence_end_date?: string | null; // ISO string\n  recurrence_count?: number | null;\n  parent_event_id?: string | null; // UUID\n  is_exception?: boolean;\n  recurrence_rule?: string | null;\n  exception_date?: string | null; // ISO string\n  series_id?: string | null; // UUID\n  recurrence_timezone?: string | null;\n}\n\n// Define the expected structure of the JSON response from the RPC\ninterface CalendarEventsRpcResponse {\n  events: RecurringCalendarEvent[]; // Or a more specific subset if RPC doesn't return full RecurringCalendarEvent\n}\n\n// Use type assertion to prevent unused interface error\nexport type { CalendarEventsRpcResponse };\n\n/**\n * Main handler function for the calendar API\n */\nconst handler: Handler = async (event: HandlerEvent, _context: HandlerContext): Promise<HandlerResponse> => {\n  // CORS headers for all responses\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS'\n  };\n\n  // Handle OPTIONS request (CORS preflight)\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 204,\n      headers: corsHeaders,\n      body: ''\n    };\n  }\n\n  // Get user ID from JWT token\n  const userId = getUserIdFromEvent(event);\n  if (!userId) {\n    return {\n      statusCode: 401,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: 'Unauthorized: Invalid or missing authentication token' })\n    };\n  }\n\n  // --- BEGIN ID EXTRACTION LOGIC ---\n  let manuallyExtractedId: string | null = null;\n  if (event.path) {\n    // Example path: /.netlify/functions/calendar/b6f328c1-1f31-408d-a8de-71ab4a34757f\n    // Or from an API gateway: /api/calendar/b6f328c1-1f31-408d-a8de-71ab4a34757f\n    const pathParts = event.path.split('/');\n    // The ID is expected to be the last part if the path matches /.../calendar/[id]\n    // Check if 'calendar' is the second to last part, then the ID is the last.\n    if (pathParts.length > 1 && pathParts[pathParts.length - 2] === 'calendar') {\n      const potentialId = pathParts[pathParts.length - 1];\n      if (isValidUUID(potentialId)) { // Use your existing UUID validator\n        manuallyExtractedId = potentialId;\n        console.log(`[calendar.ts] Manually extracted event ID from path: ${manuallyExtractedId}`);\n      }\n    }\n  }\n  // --- END ID EXTRACTION LOGIC ---\n\n  // Supabase client for database access\n  const supabaseUrl = process.env.SUPABASE_URL || process.env.VITE_SUPABASE_URL;\n  const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.VITE_SUPABASE_SERVICE_KEY || process.env.SUPABASE_ANON_KEY || process.env.VITE_SUPABASE_ANON_KEY;\n  \n  if (!supabaseUrl) {\n    console.error(`[calendar.ts] Missing Supabase URL. Available env vars: ${Object.keys(process.env).filter(key => key.includes('SUPABASE')).join(', ')}`);\n    return {\n      statusCode: 500,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: 'Server configuration error: Missing Supabase URL' })\n    };\n  }\n  \n  if (!supabaseKey) {\n    console.error(`[calendar.ts] Missing Supabase key. Available env vars: ${Object.keys(process.env).filter(key => key.includes('SUPABASE')).join(', ')}`);\n    return {\n      statusCode: 500,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: 'Server configuration error: Missing Supabase key' })\n    };\n  }\n  \n  console.log(`[calendar.ts] Using Supabase URL: ${supabaseUrl?.substring(0, 15)}... and key starting with: ${supabaseKey?.substring(0, 5)}...`);\n  const supabase = createClient(supabaseUrl, supabaseKey);\n\n  try {\n    // GET all events or search\n    if (event.httpMethod === 'GET' && !event.pathParameters?.id) {\n      const { \n        search_term, \n        start_date, \n        end_date, \n        limit = '50', \n        offset = '0',\n        force_refresh = 'false'\n      } = event.queryStringParameters || {};\n\n      const limitNum = parseInt(limit, 10);\n      const offsetNum = parseInt(offset, 10);\n      const forceRefresh = force_refresh === 'true';\n      \n      console.log(`[calendar.ts] GET query params: search_term=${search_term}, start_date=${start_date}, end_date=${end_date}, limit=${limitNum}, offset=${offsetNum}, force_refresh=${forceRefresh}`);\n      \n      // OPTIMIZATION: Use the cached RPC function for better performance\n      try {\n        // First try to use the optimized cached function if available\n        const { data: cachedResults, error: cacheError } = await supabase.rpc(\n          'get_calendar_events_cached',\n          {\n            p_user_id: userId,\n            p_query: search_term || null,\n            p_start_date: start_date || null,\n            p_end_date: end_date || null,\n            p_limit: limitNum,\n            p_offset: offsetNum,\n            p_force_refresh: forceRefresh\n          }\n        );\n        \n        if (!cacheError && cachedResults) {\n          console.log(`[calendar.ts] Successfully retrieved calendar events from optimized cached function. Found ${cachedResults.events?.length || 0} events.`);\n          \n          // Return the cached results directly\n          return {\n            statusCode: 200,\n            headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n            body: JSON.stringify(cachedResults.events || [])\n          };\n        } else {\n          console.log(`[calendar.ts] Cache function unavailable or error: ${cacheError?.message}. Falling back to standard query.`);\n        }\n      } catch (rpcError) {\n        console.error(`[calendar.ts] Error using optimized RPC: ${rpcError}. Falling back to standard query.`);\n        // Continue with the standard query path below\n      }\n\n      // Fall back to standard event fetching logic\n      return await handleGetRequest(event, userId, null, { ...corsHeaders, 'Content-Type': 'application/json' });\n    } else if (event.httpMethod === 'GET' && event.pathParameters?.id) {\n      // Handle GET for a specific event by ID\n      return await handleGetRequest(event, userId, event.pathParameters.id, { ...corsHeaders, 'Content-Type': 'application/json' });\n    } else if (event.httpMethod === 'POST') {\n      // Handle POST request for creating new events\n      return await handlePostRequest(event, userId, { ...corsHeaders, 'Content-Type': 'application/json' });\n    } else if (event.httpMethod === 'PUT') {\n      const requestEventId = event.pathParameters?.id || manuallyExtractedId;\n      return await handlePutRequest(event, userId, requestEventId || null, { ...corsHeaders, 'Content-Type': 'application/json' });\n    } else if (event.httpMethod === 'DELETE') {\n      const requestEventId = event.pathParameters?.id || manuallyExtractedId;\n      console.log(`[calendar.ts] DELETE: Effective requestEventId before calling handleDeleteRequest: ${requestEventId}`);\n      return await handleDeleteRequest(event, userId, requestEventId || null, { ...corsHeaders, 'Content-Type': 'application/json' });\n    } else {\n      // Handle unsupported methods\n      return {\n        statusCode: 405,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: `HTTP method ${event.httpMethod} is not supported on this endpoint.` })\n      };\n    }\n  } catch (error) {\n    // Main error handler for all uncaught errors\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    console.error(`[calendar.ts] Unhandled error in main handler: ${errorMessage}`, error);\n    return {\n      statusCode: 500,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        message: \"An unexpected server error occurred.\", \n        error: errorMessage, \n        stack: process.env.NODE_ENV === 'development' ? (error instanceof Error ? error.stack : undefined) : undefined \n      })\n    };\n  }\n};\n\n// New helper function to encapsulate GET request logic\nasync function handleGetRequest(\n  event: HandlerEvent, \n  userId: string, \n  requestEventId: string | null, \n  responseHeaders: { [header: string]: string | number | boolean; }\n): Promise<HandlerResponse> {\n  try { // Inner try specifically for GET logic\n    console.log(\"--- calendar.ts handling GET request ---  User:\", userId);\n\n    const authHeader = event.headers?.authorization;\n    let supabaseDataClient: SupabaseClient; // Use SupabaseClient type\n\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.substring(7);\n      try {\n        supabaseDataClient = createClientWithAuth(token);\n        console.log('[calendar.ts] GET: Using RLS-aware auth client for data fetching.');\n      } catch (clientError: unknown) {\n        const errorMessage = clientError instanceof Error ? clientError.message : String(clientError);\n        console.error('[calendar.ts] GET: Error creating auth client for RLS.', errorMessage);\n        return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: \"Internal server error: Could not initialize authenticated database access.\", details: errorMessage }) };\n      }\n    } else {\n      console.error('[calendar.ts] GET: Auth header not found after userId validation.');\n      return { statusCode: 401, headers: responseHeaders, body: JSON.stringify({ message: \"Unauthorized: Missing token for data fetching operations.\" }) };\n    }\n\n    console.log(\"[CALENDAR DEBUG] Request params:\", event.queryStringParameters);\n    const searchTerm = event.queryStringParameters?.search_term || null;\n    const startDateString = event.queryStringParameters?.start_date || null;\n    const endDateString = event.queryStringParameters?.end_date || null;\n    const expandRecurring = event.queryStringParameters?.expand_recurring === 'true';\n\n    if (requestEventId) {\n      return fetchEventById(requestEventId, supabaseDataClient, expandRecurring, startDateString, endDateString, responseHeaders, userId);\n    } else if (searchTerm) {\n      return searchEvents(searchTerm, supabaseDataClient, expandRecurring, startDateString, endDateString, responseHeaders, userId);\n    } else {\n      return listEvents(supabaseDataClient, expandRecurring, startDateString, endDateString, responseHeaders, userId);\n    }\n  } catch (getLogicError: unknown) {\n    const errorMessage = getLogicError instanceof Error ? getLogicError.message : String(getLogicError);\n    const errorStack = getLogicError instanceof Error ? getLogicError.stack : undefined;\n    console.error(\"[calendar.ts] Error in GET handler logic:\", getLogicError);\n    return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: \"Internal server error during GET request processing.\", error: errorMessage, stack: process.env.NODE_ENV === 'development' ? errorStack : undefined }) };\n  }\n}\n\n// Helper function to fetch a single event by ID\nasync function fetchEventById(\n  eventId: string,\n  supabaseClient: SupabaseClient,\n  expandRecurring: boolean,\n  startDateString: string | null,\n  endDateString: string | null,\n  responseHeaders: { [header: string]: string | number | boolean; },\n  userId: string // Added userId for logging\n): Promise<HandlerResponse> {\n  if (!isValidUUID(eventId)) {\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: `Invalid event ID format: ${eventId}. Must be a UUID.` }) };\n  }\n  console.log(`[calendar.ts] Fetching event by ID: ${eventId} for user ${userId}`);\n  const { data: eventData, error } = await supabaseClient\n    .from('calendar_events')\n    .select('*')\n    .eq('event_id', eventId)\n    .single<RecurringCalendarEvent>();\n\n  if (error) {\n    console.error(`[calendar.ts] Error fetching event by ID ${eventId} for user ${userId}:`, error);\n    const statusCode = error.code === 'PGRST116' ? 404 : 500;\n    return { statusCode, headers: responseHeaders, body: JSON.stringify({ message: `Event not found or access denied.`, details: error.message }) };\n  }\n\n  if (eventData && expandRecurring && eventData.is_recurring && startDateString && endDateString) {\n    const viewStartDate = parseISO(startDateString);\n    const viewEndDate = parseISO(endDateString);\n    const occurrences = generateRecurringEventOccurrences(eventData, viewStartDate, viewEndDate);\n    const expandedEvent = { \n      ...eventData, \n      occurrences: occurrences.map(occ => ({...occ, event_id: `${eventData.event_id}_instance_${occ.start_time}`}))\n    };\n    return { statusCode: 200, headers: responseHeaders, body: JSON.stringify(expandedEvent) };\n  }\n  \n  return { statusCode: 200, headers: responseHeaders, body: JSON.stringify(eventData || null) };\n}\n\n// Helper function to search events\nasync function searchEvents(\n  searchTerm: string,\n  supabaseClient: SupabaseClient,\n  expandRecurring: boolean,\n  startDateString: string | null,\n  endDateString: string | null,\n  responseHeaders: { [header: string]: string | number | boolean; },\n  userId: string // Added userId for logging\n): Promise<HandlerResponse> {\n  console.log(`[calendar.ts] Searching events with term: \"${searchTerm}\" for user ${userId}, start: ${startDateString}, end: ${endDateString}`);\n  let query = supabaseClient\n    .from('calendar_events')\n    .select('*');\n    // .eq('user_id', userId) // RLS should handle\n\n  // Handle search term\n  if (searchTerm) {\n    const searchTerms = searchTerm.split(/\\s*\\/\\s*|\\s*,\\s*|\\s+/).map(term => term.trim()).filter(term => term.length > 0);\n    if (searchTerms.length > 0) {\n      const orConditions = searchTerms.map(term => `title.ilike.%${term}%`).join(',');\n      query = query.or(orConditions);\n      console.log(`[calendar.ts] Applied search term conditions: ${orConditions}`);\n    }\n  }\n\n  if (startDateString) {\n    query = query.gte('start_time', startDateString);\n    console.log(`[calendar.ts] Applied start_date filter: >= ${startDateString}`);\n  }\n  if (endDateString) {\n    // Corrected to find events STARTING within the date range, or implement full overlap\n    // For simplicity, using start_time <= endDateString.\n    // Full overlap would be: .lte('start_time', endDateString).gte('end_time', startDateString)\n    query = query.lte('start_time', endDateString);\n    console.log(`[calendar.ts] Applied end_date filter (for start_time): <= ${endDateString}`);\n  }\n\n  const { data: events, error } = await query.returns<RecurringCalendarEvent[]>();\n\n  if (error) {\n    console.error(`[calendar.ts] Error searching events for user ${userId}:`, error);\n    return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: \"Failed to search events.\", details: error.message }) };\n  }\n\n  if (expandRecurring && events && events.length > 0 && startDateString && endDateString) {\n    const expandedEvents: RecurringCalendarEvent[] = [];\n    const viewStartDate = parseISO(startDateString);\n    const viewEndDate = parseISO(endDateString);\n    for (const event of events) {\n      if (event.is_recurring) {\n        const occurrences = generateRecurringEventOccurrences(event, viewStartDate, viewEndDate);\n        for (const occurrence of occurrences) {\n          expandedEvents.push({\n            ...occurrence,\n            event_id: (typeof event.event_id === 'string' ? event.event_id : String(event.event_id)) + `_instance_${occurrence.start_time}`\n          } as RecurringCalendarEvent);\n        }\n      } else {\n        expandedEvents.push(event);\n      }\n    }\n    return { statusCode: 200, headers: responseHeaders, body: JSON.stringify(expandedEvents) };\n  }\n  return { statusCode: 200, headers: responseHeaders, body: JSON.stringify(events || []) };\n}\n\n// Helper function to list all events (with optional date range)\nasync function listEvents(\n  supabaseClient: SupabaseClient,\n  expandRecurring: boolean,\n  startDateString: string | null,\n  endDateString: string | null,\n  responseHeaders: { [header: string]: string | number | boolean; },\n  userId: string // Added userId for logging\n): Promise<HandlerResponse> {\n  console.log(`[calendar.ts] Fetching all events for user ${userId} (with date range if provided)`);\n  let query = supabaseClient\n    .from('calendar_events')\n    .select('*')\n    // .eq('user_id', userId); // RLS will handle user ID filtering\n\n  if (startDateString && endDateString) {\n    console.log(`[calendar.ts] Applying date range: ${startDateString} to ${endDateString}`);\n    // Create an OR condition for events that overlap with the given range\n    // An event overlaps if: event.start_time < query.end_date AND event.end_time > query.start_date\n    query = query.or(`start_time.lte.${endDateString},end_time.gte.${startDateString},and(start_time.gte.${startDateString},end_time.lte.${endDateString})`);\n  } else if (startDateString) {\n    query = query.gte('start_time', startDateString);\n  } else if (endDateString) {\n    // This case might be less common (only end_date), but supported\n    query = query.lte('end_time', endDateString);\n  }\n  // Add ordering\n  query = query.order('start_time', { ascending: true });\n\n  const { data: events, error } = await query.returns<RecurringCalendarEvent[]>();\n\n  if (error) {\n    console.error(`[calendar.ts] Error fetching events for user ${userId}:`, error);\n    return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: \"Failed to fetch events.\", details: error.message }) };\n  }\n  \n  if (expandRecurring && events && events.length > 0 && startDateString && endDateString) {\n    const expandedEvents: RecurringCalendarEvent[] = [];\n    const viewStartDate = parseISO(startDateString);\n    const viewEndDate = parseISO(endDateString);\n    for (const event of events) {\n      if (event.is_recurring) {\n        const occurrences = generateRecurringEventOccurrences(event, viewStartDate, viewEndDate);\n        for (const occurrence of occurrences) {\n           expandedEvents.push({\n            ...occurrence,\n            event_id: (typeof event.event_id === 'string' ? event.event_id : String(event.event_id)) + `_instance_${occurrence.start_time}`\n          } as RecurringCalendarEvent);\n        }\n      } else {\n        // Only add non-recurring events if they fall within the view window\n        // This check is important if the main query was broader than the expansion window\n        const eventStart = parseISO(event.start_time);\n        const eventEnd = parseISO(event.end_time);\n        if (eventStart < viewEndDate && eventEnd > viewStartDate) {\n             expandedEvents.push(event);\n        }\n      }\n    }\n    return { statusCode: 200, headers: responseHeaders, body: JSON.stringify(expandedEvents) };\n  }\n  return { statusCode: 200, headers: responseHeaders, body: JSON.stringify(events || []) };\n}\n\nasync function handlePutRequest(\n  event: HandlerEvent, \n  userId: string, \n  requestEventId: string | null,\n  responseHeaders: { [header: string]: string | number | boolean; }\n): Promise<HandlerResponse> {\n  console.log(`[calendar.ts] --- handlePutRequest --- User: ${userId}, EventID: ${requestEventId}`);\n\n  if (!requestEventId) {\n    console.error('[calendar.ts] PUT Error: Missing event ID');\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Event ID is required for update' }) };\n  }\n\n  if (!isValidUUID(requestEventId)) {\n    console.error(`[calendar.ts] PUT Error: Invalid UUID format for requestEventId: ${requestEventId}`);\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Invalid Event ID format' }) };\n  }\n\n  if (!event.body) {\n    console.error('[calendar.ts] PUT Error: Missing request body');\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Missing request body' }) };\n  }\n\n  let updatePayload: Partial<Omit<RecurringCalendarEvent, 'event_id' | 'user_id' | 'created_at'>>;\n  try {\n    console.log('[calendar.ts] PUT: Raw event.body:', event.body);\n    const rawPayload = JSON.parse(event.body) as RawEventUpdatePayload;\n    console.log('[calendar.ts] PUT: Parsed rawPayload:', JSON.stringify(rawPayload, null, 2));\n    \n    // Remove update_scope if present (not part of the database schema)\n    const { update_scope, ...eventDataToUpdate } = rawPayload;\n    if (update_scope) {\n      console.log(`[calendar.ts] PUT: Received update_scope: ${update_scope} - currently not implemented for full series edit.`);\n    }\n    updatePayload = eventDataToUpdate;\n  } catch (parseError) {\n    const parseErrorMessage = parseError instanceof Error ? parseError.message : String(parseError);\n    console.error('[calendar.ts] PUT Error: Invalid JSON format - ', parseErrorMessage);\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Invalid JSON format', details: parseErrorMessage }) };\n  }\n\n  // Validate dates if provided\n  try {\n    if (updatePayload.start_time) parseISO(updatePayload.start_time);\n    if (updatePayload.end_time) parseISO(updatePayload.end_time);\n    if (updatePayload.recurrence_end_date) parseISO(updatePayload.recurrence_end_date);\n    if (updatePayload.exception_date) parseISO(updatePayload.exception_date);\n  } catch (dateError) {\n    const dateErrorMessage = dateError instanceof Error ? dateError.message : String(dateError);\n    console.error('[calendar.ts] PUT Error: Invalid date format - ', dateErrorMessage);\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Invalid date format. Use ISO 8601.', details: dateErrorMessage }) };\n  }\n\n  const jwt = event.headers?.authorization?.substring(7);\n  if (!jwt) {\n    console.error('[calendar.ts] PUT Error: Unauthorized - Missing token.');\n    return { statusCode: 401, headers: responseHeaders, body: JSON.stringify({ message: 'Unauthorized: Missing token for update operation.' }) };\n  }\n\n  let supabaseClientWithAuth: SupabaseClient;\n  try {\n    supabaseClientWithAuth = createClientWithAuth(jwt);\n  } catch (clientError) {\n    const clientErrorMessage = clientError instanceof Error ? clientError.message : String(clientError);\n    console.error('[calendar.ts] PUT Error: Could not initialize authenticated database client - ', clientErrorMessage);\n    return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: 'Server error: Could not initialize authenticated database client.', details: clientErrorMessage }) };\n  }\n\n  // Set updated_at timestamp\n  updatePayload.updated_at = new Date().toISOString();\n\n  // Remove fields that are undefined to avoid PostgreSQL errors\n  Object.keys(updatePayload).forEach(key => {\n    if (updatePayload[key as keyof typeof updatePayload] === undefined) {\n      delete updatePayload[key as keyof typeof updatePayload];\n    }\n  });\n\n  if (Object.keys(updatePayload).length === 1 && updatePayload.updated_at) {\n    console.error('[calendar.ts] PUT Error: No updatable fields provided.');\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: No updatable fields provided.' }) };\n  }\n\n  console.log('[calendar.ts] PUT: Attempting to update event with payload:', JSON.stringify(updatePayload, null, 2));\n\n  const { data, error } = await supabaseClientWithAuth\n    .from('calendar_events')\n    .update(updatePayload)\n    .eq('event_id', requestEventId)\n    .select()\n    .single<RecurringCalendarEvent>();\n\n  if (error) {\n    const statusCode = error.code === 'PGRST116' ? 404 : 500; // PGRST116: Not found / no rows updated\n    console.error(`[calendar.ts] PUT Error: Supabase update error for event ${requestEventId}:`, JSON.stringify(error, null, 2));\n    return { statusCode, headers: responseHeaders, body: JSON.stringify({ message: statusCode === 404 ? 'Event not found, access denied, or no changes made.' : 'Failed to update event.', details: error.message, code: error.code }) };\n  }\n\n  if (!data) {\n    console.error(`[calendar.ts] PUT Error: No data returned after update for event ${requestEventId}.`);\n    return { statusCode: 404, headers: responseHeaders, body: JSON.stringify({ message: 'Event not found or no update performed.' }) };\n  }\n\n  console.log('[calendar.ts] PUT: Successfully updated event:', JSON.stringify(data, null, 2));\n  return { statusCode: 200, headers: responseHeaders, body: JSON.stringify(data) };\n}\n\nasync function handlePostRequest(\n  event: HandlerEvent, \n  userId: string, \n  responseHeaders: { [header: string]: string | number | boolean; }\n): Promise<HandlerResponse> {\n  console.log(`[calendar.ts] --- handlePostRequest --- User: ${userId}`);\n\n  if (!event.body) {\n    console.error('[calendar.ts] Create Event Error: Missing request body');\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Missing request body' }) };\n  }\n\n  let newEventData: NewCalendarEvent;\n  try {\n    console.log('[calendar.ts] Create Event: Raw event.body:', event.body);\n    newEventData = JSON.parse(event.body) as NewCalendarEvent;\n    console.log('[calendar.ts] Create Event: Parsed newEventData:', JSON.stringify(newEventData, null, 2));\n  } catch (error) {\n    const parseErrorMessage = error instanceof Error ? error.message : String(error);\n    console.error('[calendar.ts] Create Event Error: Invalid JSON format - ', parseErrorMessage);\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Invalid JSON format', details: parseErrorMessage }) };\n  }\n\n  if (!newEventData.title || !newEventData.start_time || !newEventData.end_time) {\n    console.error('[calendar.ts] Create Event Error: Missing required fields (title, start_time, end_time). Provided:', JSON.stringify(newEventData, null, 2));\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Missing required fields (title, start_time, end_time)' }) };\n  }\n  try {\n    parseISO(newEventData.start_time);\n    parseISO(newEventData.end_time);\n    if (newEventData.recurrence_end_date) parseISO(newEventData.recurrence_end_date);\n    if (newEventData.exception_date) parseISO(newEventData.exception_date);\n  } catch (dateError) {\n    const dateErrorMessage = dateError instanceof Error ? dateError.message : String(dateError);\n    console.error('[calendar.ts] Create Event Error: Invalid date format - ', dateErrorMessage, 'Provided dates:', {start: newEventData.start_time, end: newEventData.end_time, recurrence_end: newEventData.recurrence_end_date, exception: newEventData.exception_date });\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Invalid date format. Use ISO 8601.', details: dateErrorMessage }) };\n  }\n  if ((newEventData.parent_event_id && !isValidUUID(newEventData.parent_event_id)) || \n      (newEventData.series_id && !isValidUUID(newEventData.series_id))) {\n    console.error('[calendar.ts] Create Event Error: Invalid UUID format for parent_event_id or series_id. Provided:', {parent: newEventData.parent_event_id, series: newEventData.series_id});\n    return { statusCode: 400, headers: responseHeaders, body: JSON.stringify({ message: 'Bad Request: Invalid UUID format for parent_event_id or series_id' }) };\n  }\n\n  const jwt = event.headers?.authorization?.substring(7);\n  if (!jwt) {\n    console.error('[calendar.ts] Create Event Error: Unauthorized - Missing token.');\n    return { statusCode: 401, headers: responseHeaders, body: JSON.stringify({ message: 'Unauthorized: Missing token for create operation.' }) };\n  }\n\n  let supabaseClientWithAuth: SupabaseClient;\n  try {\n    supabaseClientWithAuth = createClientWithAuth(jwt);\n  } catch (clientError) {\n     const clientErrorMessage = clientError instanceof Error ? clientError.message : String(clientError);\n     console.error('[calendar.ts] Create Event Error: Could not initialize authenticated database client - ', clientErrorMessage);\n     return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: 'Server error: Could not initialize authenticated database client.', details: clientErrorMessage}) };\n  }\n  \n  // Constructing eventToInsert with all fields from NewCalendarEvent for clarity and safety\n  const eventToInsert = {\n    user_id: userId, // Already validated\n    title: newEventData.title,\n    start_time: newEventData.start_time,\n    end_time: newEventData.end_time,\n    description: newEventData.description || null,\n    location: newEventData.location || null,\n    is_all_day: newEventData.is_all_day || false,\n    google_event_id: newEventData.google_event_id || null,\n    zoom_meeting_id: newEventData.zoom_meeting_id || null,\n    is_recurring: newEventData.is_recurring || false,\n    is_exception: newEventData.is_exception || false,\n    recurrence_pattern: newEventData.is_recurring ? newEventData.recurrence_pattern : null,\n    recurrence_interval: newEventData.is_recurring ? (newEventData.recurrence_interval ?? 1) : null, // ?? for explicit null check vs ||\n    recurrence_day_of_week: newEventData.is_recurring ? newEventData.recurrence_day_of_week : null,\n    recurrence_day_of_month: newEventData.is_recurring ? newEventData.recurrence_day_of_month : null,\n    recurrence_month: newEventData.is_recurring ? newEventData.recurrence_month : null,\n    recurrence_end_date: newEventData.is_recurring ? newEventData.recurrence_end_date : null,\n    recurrence_count: newEventData.is_recurring ? newEventData.recurrence_count : null,\n    recurrence_rule: newEventData.is_recurring ? newEventData.recurrence_rule : null,\n    recurrence_timezone: newEventData.is_recurring ? newEventData.recurrence_timezone : null,\n    parent_event_id: newEventData.parent_event_id || null, \n    exception_date: newEventData.is_exception ? newEventData.exception_date : null,\n    series_id: newEventData.series_id || null,\n    // created_at and updated_at will be set by Supabase or DB triggers\n  };\n\n  // Remove any top-level undefined properties before insert, as Supabase client might handle this, but explicit is safer.\n  // This was the previous logic, keeping it.\n  Object.keys(eventToInsert).forEach(keyStr => {\n    const key = keyStr as keyof typeof eventToInsert;\n    if (eventToInsert[key] === undefined) {\n      delete eventToInsert[key];\n    }\n  });\n\n  console.log('[calendar.ts] Create Event: Attempting to insert eventToInsert:', JSON.stringify(eventToInsert, null, 2));\n\n  const { data, error } = await supabaseClientWithAuth\n    .from('calendar_events')\n    .insert([eventToInsert]) \n    .select() \n    .single<RecurringCalendarEvent>();\n\n  if (error) {\n    console.error('[calendar.ts] Create Event Error: Supabase insert error - ', JSON.stringify(error, null, 2));\n    return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: 'Database error: Could not create event', details: error.message, code: error.code }) };\n  }\n  if (!data) {\n    console.error('[calendar.ts] Create Event Error: Supabase insert error - No data returned after insert.');\n    return { statusCode: 500, headers: responseHeaders, body: JSON.stringify({ message: 'Database error: Failed to create event (no data returned)' }) };\n  }\n\n  console.log('[calendar.ts] Create Event: Successfully created event:', JSON.stringify(data, null, 2));\n  return { statusCode: 201, headers: responseHeaders, body: JSON.stringify(data) };\n}\n\n// Helper function to handle DELETE requests\nasync function handleDeleteRequest(\n  event: HandlerEvent, \n  userId: string, \n  requestEventId: string | null, \n  responseHeaders: { [header: string]: string | number | boolean; }\n): Promise<HandlerResponse> {\n  try {\n    console.log(`--- calendar.ts handling DELETE request ---  User: ${userId} | Raw requestEventId: ${requestEventId} | Path params: ${JSON.stringify(event.pathParameters)}`);\n\n    if (!requestEventId) {\n      console.error('[calendar.ts] DELETE Error: requestEventId is null or undefined.');\n      return {\n        statusCode: 400,\n        headers: responseHeaders,\n        body: JSON.stringify({ message: 'Event ID is required for deletion' })\n      };\n    }\n\n    // Validate UUID format\n    if (!isValidUUID(requestEventId)) {\n      console.error(`[calendar.ts] DELETE Error: Invalid UUID format for requestEventId: ${requestEventId}`);\n      return {\n        statusCode: 400,\n        headers: responseHeaders,\n        body: JSON.stringify({ message: 'Invalid Event ID format' })\n      };\n    }\n\n    const authHeader = event.headers?.authorization;\n    let supabaseDeleteClient: SupabaseClient;\n\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.substring(7);\n      try {\n        supabaseDeleteClient = createClientWithAuth(token);\n        console.log('[calendar.ts] DELETE: Using RLS-aware auth client for event deletion.');\n      } catch (authError) {\n        console.error('[calendar.ts] DELETE: Error creating authenticated client:', authError);\n        return {\n          statusCode: 401,\n          headers: responseHeaders,\n          body: JSON.stringify({ message: 'Authentication failed' })\n        };\n      }\n    } else {\n      console.error('[calendar.ts] DELETE: No valid authorization header found');\n      return {\n        statusCode: 401,\n        headers: responseHeaders,\n        body: JSON.stringify({ message: 'Authorization required' })\n      };\n    }\n\n    // First, check if the event exists and belongs to the user\n    const { data: existingEvent, error: fetchError } = await supabaseDeleteClient\n      .from('calendar_events')\n      .select('event_id, title, user_id')\n      .eq('event_id', requestEventId)\n      .single();\n\n    if (fetchError) {\n      console.error(`[calendar.ts] DELETE: Error fetching event ${requestEventId} for user ${userId}:`, JSON.stringify(fetchError));\n      if (fetchError.code === 'PGRST116') { // PGRST116: \"The result contains 0 rows\"\n        return {\n          statusCode: 404,\n          headers: responseHeaders,\n          body: JSON.stringify({ message: 'Event not found or access denied' })\n        };\n      }\n      return {\n        statusCode: 500,\n        headers: responseHeaders,\n        body: JSON.stringify({ message: 'Failed to verify event existence', details: fetchError.message, code: fetchError.code })\n      };\n    }\n\n    if (!existingEvent) {\n      console.error(`[calendar.ts] DELETE Error: Event not found with ID: ${requestEventId} (after fetch attempt).`);\n      return {\n        statusCode: 404,\n        headers: responseHeaders,\n        body: JSON.stringify({ message: 'Event not found' })\n      };\n    }\n\n    // Now delete the event\n    const { error: deleteError } = await supabaseDeleteClient\n      .from('calendar_events')\n      .delete()\n      .eq('event_id', requestEventId);\n\n    if (deleteError) {\n      console.error(`[calendar.ts] DELETE: Error deleting event ${requestEventId}:`, JSON.stringify(deleteError));\n      return {\n        statusCode: 500,\n        headers: responseHeaders,\n        body: JSON.stringify({ message: 'Failed to delete event', details: deleteError.message })\n      };\n    }\n\n    console.log(`[calendar.ts] DELETE: Successfully deleted event ${requestEventId} (\"${existingEvent.title}\") for user ${userId}`);\n    \n    return {\n      statusCode: 200,\n      headers: responseHeaders,\n      body: JSON.stringify({ \n        success: true,\n        message: 'Event deleted successfully',\n        event_id: requestEventId,\n        deleted_event_title: existingEvent.title\n      })\n    };\n\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    console.error(`[calendar.ts] DELETE: Unhandled error in handleDeleteRequest:`, errorMessage, error);\n    return {\n      statusCode: 500,\n      headers: responseHeaders,\n      body: JSON.stringify({ \n        message: \"An unexpected error occurred during deletion\", \n        error: errorMessage \n      })\n    };\n  }\n}\n\nexport { handler };"]}